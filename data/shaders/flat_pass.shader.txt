
#if defined VERTEX_SHADER

#  define VERTEX_OUT out

#elif defined FRAGMENT_SHADER

#  define VERTEX_OUT in

#else

#  error define VERTEX_SHADER or FRAGMENT_SHADER befor makeing a shader object

#endif

///////////////////////////////////////////////////////////////////////////////
//  OPTIONS                                                                // 
///////////////////////////////////////////////////////////////////////////////

// WITH_DIFFUSE_TEXTURE
// WITH_VERTEX_COLOR

///////////////////////////////////////////////////////////////////////////////
//  INTERFACE                                                                // 
///////////////////////////////////////////////////////////////////////////////

uniform mat4      u_camera_to_clip_projection;
uniform sampler2D u_diffuse_texture;

#if defined VERTEX_SHADER

in vec3 a_position;
in vec2 a_uv;
in vec4 a_color;

#endif

VERTEX_OUT vec4 color;
VERTEX_OUT vec2 uv;

#if defined FRAGMENT_SHADER

out vec4 out_color;

#endif


///////////////////////////////////////////////////////////////////////////////
//  VERTEX_SHADER                                                            // 
///////////////////////////////////////////////////////////////////////////////

#if defined VERTEX_SHADER

void main() {
	uv    = a_uv;
	color = a_color;

	gl_Position = u_camera_to_clip_projection * vec4(a_position, 1);
}

#endif


///////////////////////////////////////////////////////////////////////////////
//  FRAGMENT_SHADER                                                          // 
///////////////////////////////////////////////////////////////////////////////

#if defined FRAGMENT_SHADER

void main() {
	vec4 diffuse_color = vec4(1);

#if defined WITH_DIFFUSE_TEXTURE
	diffuse_color *= texture(u_diffuse_texture, uv); 
#endif

#if defined WITH_VERTEX_COLOR
	diffuse_color *= color;
#endif

	out_color = diffuse_color;
}

#endif